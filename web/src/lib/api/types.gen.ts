// This file is auto-generated by @hey-api/openapi-ts

export type AddNewWordRequest = {
    word: string;
};

export type AddNewWordResponse = {
    item: Item;
    userWordId: string;
};

export type HttpValidationError = {
    detail?: Array<ValidationError>;
};

export type Item = {
    word: string;
    meaning: string;
    exampleSentence: string;
    exampleSentenceTranslation: string;
};

export type SigninRequest = {
    username: string;
    password: string;
};

export type Token = {
    access_token: string;
    token_type: string;
};

export type User = {
    username: string;
    email: string;
    full_name?: string | null;
    disabled?: boolean;
};

export type UserCreate = {
    username: string;
    email: string;
    password: string;
};

export type ValidationError = {
    loc: Array<string | number>;
    msg: string;
    type: string;
};

export type SigninUserSigninPostData = {
    body: SigninRequest;
    path?: never;
    query?: never;
    url: '/user/signin';
};

export type SigninUserSigninPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type SigninUserSigninPostError = SigninUserSigninPostErrors[keyof SigninUserSigninPostErrors];

export type SigninUserSigninPostResponses = {
    /**
     * Successful Response
     */
    200: Token;
};

export type SigninUserSigninPostResponse = SigninUserSigninPostResponses[keyof SigninUserSigninPostResponses];

export type SignupUserSignupPostData = {
    body: UserCreate;
    path?: never;
    query?: never;
    url: '/user/signup';
};

export type SignupUserSignupPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type SignupUserSignupPostError = SignupUserSignupPostErrors[keyof SignupUserSignupPostErrors];

export type SignupUserSignupPostResponses = {
    /**
     * Successful Response
     */
    201: User;
};

export type SignupUserSignupPostResponse = SignupUserSignupPostResponses[keyof SignupUserSignupPostResponses];

export type SignoutUserSignoutGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/user/signout';
};

export type SignoutUserSignoutGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetMeUserMeGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/user/me';
};

export type GetMeUserMeGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type AddNewWordWordAddNewWordPostData = {
    body: AddNewWordRequest;
    path?: never;
    query?: never;
    url: '/word/add_new_word';
};

export type AddNewWordWordAddNewWordPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AddNewWordWordAddNewWordPostError = AddNewWordWordAddNewWordPostErrors[keyof AddNewWordWordAddNewWordPostErrors];

export type AddNewWordWordAddNewWordPostResponses = {
    /**
     * Successful Response
     */
    200: AddNewWordResponse;
};

export type AddNewWordWordAddNewWordPostResponse = AddNewWordWordAddNewWordPostResponses[keyof AddNewWordWordAddNewWordPostResponses];

export type RootGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/';
};

export type RootGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ClientOptions = {
    baseUrl: 'http://127.0.0.1:4000' | (string & {});
};